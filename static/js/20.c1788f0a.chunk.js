"use strict";(self.webpackChunktbb=self.webpackChunktbb||[]).push([[20],{640:(e,n,o)=>{o.r(n),o.d(n,{default:()=>r});var t=o(60),a=o(336);o(896);var s=o(496);function r(){return(0,t.useEffect)((()=>{document.querySelectorAll("pre").forEach((e=>a.c.highlightBlock(e)))}),[]),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("p",{className:"body-text",children:"Torrent files are a popular way to share large files online. However, downloading them can be a hassle, especially if you don't have a good internet connection or a lot of storage space on your computer. Fortunately, there is a way to download torrent files directly to your Google Drive account without downloading them yourself, so you can access them from anywhere, without using your internet and also free up space on your hard drive."}),(0,s.jsx)("p",{className:"body-text",children:"Using a Google Colab script, you can easily download torrent files directly to your Google Drive account without needing to use a third-party cloud torrent service. Here's how to do it:"}),(0,s.jsx)("h2",{className:"body-head mt-4",children:"Step 1: Open Google Colab"}),(0,s.jsxs)("p",{className:"body-text",children:["First, open"," ",(0,s.jsx)("a",{href:"https://colab.research.google.com/",children:"Google Colab"})," in your web browser. Google Colab is a cloud-based service that allows you to write and run Python code in a Jupyter Notebook-style interface."]}),(0,s.jsx)("h2",{className:"body-head mt-4",children:"Step 2: Create a New Notebook"}),(0,s.jsx)("p",{className:"body-text",children:'Next, create a new Colab notebook by clicking "New Notebook" and selecting "Python 3" as the runtime type.'}),(0,s.jsx)("h2",{className:"body-head mt-4",children:"Step 3: Import the Necessary Libraries"}),(0,s.jsx)("p",{className:"body-text",children:"In the first code cell of your notebook, import the necessary libraries for downloading and extracting the torrent file. This can be done with the following code:"}),(0,s.jsx)("pre",{className:"code-block-simple",children:"!apt install python3-libtorrent\n\nimport libtorrent as lt\n\nses = lt.session()\nses.listen_on(6881, 6891)\ndownloads = []\n"}),(0,s.jsx)("h2",{className:"body-head mt-4",children:"Step 4: Connect to Your Google Drive Account"}),(0,s.jsx)("p",{className:"body-text",children:"Next, connect to your Google Drive account by running the following code in a new cell:"}),(0,s.jsx)("pre",{className:"code-block-simple",children:'from google.colab import drive\ndrive.mount("/content/drive")\n'}),(0,s.jsx)("p",{className:"body-text",children:"This will prompt you to authorize Google Colab to access your Google Drive account."}),(0,s.jsx)("h2",{className:"body-head mt-4",children:"Step 5: Add the Torrent File / Torrent Link"}),(0,s.jsx)("p",{className:"body-text",children:"In the next cell of your notebook, add the torrent file using the following code:"}),(0,s.jsx)("pre",{className:"code-block-simple",children:'from google.colab import files\n\nsource = files.upload()\nparams = {\n    "save_path": "/content/drive/My Drive/Torrent",\n    "ti": lt.torrent_info(list(source.keys())[0]),\n}\ndownloads.append(ses.add_torrent(params))\n'}),(0,s.jsx)("p",{className:"body-text",children:"Incase you have the torrent link, you can use the following code to add link directly:"}),(0,s.jsx)("pre",{className:"code-block-simple",children:'params = {"save_path": "/content/drive/My Drive/Torrent"}\n\nwhile True:\n    magnet_link = input("Enter Magnet Link Or Type Exit: ")\n    if magnet_link.lower() == "exit":\n        break\n    downloads.append(\n        lt.add_magnet_uri(ses, magnet_link, params)\n    )'}),(0,s.jsx)("p",{className:"body-text",children:'Just type "exit" and hit enter once you are done entering all links.'}),(0,s.jsx)("h2",{className:"body-head mt-4",children:"Step 7: Start the Download"}),(0,s.jsx)("p",{className:"body-text",children:"Finally, start the download process by running the following code in a new cell:"}),(0,s.jsx)("pre",{className:"code-block-simple",children:'import time\nfrom IPython.display import display\nimport ipywidgets as widgets\n\nstate_str = [\n    "queued",\n    "checking",\n    "downloading metadata",\n    "downloading",\n    "finished",\n    "seeding",\n    "allocating",\n    "checking fastresume",\n]\n\nlayout = widgets.Layout(width="auto")\nstyle = {"description_width": "initial"}\ndownload_bars = [\n    widgets.FloatSlider(\n        step=0.01, disabled=True, layout=layout, style=style\n    )\n    for _ in downloads\n]\ndisplay(*download_bars)\n\nwhile downloads:\n    next_shift = 0\n    for index, download in enumerate(downloads[:]):\n        bar = download_bars[index + next_shift]\n        if not download.is_seed():\n            s = download.status()\n\n            bar.description = " ".join(\n                [\n                    download.name(),\n                    str(s.download_rate / 1000),\n                    "kB/s",\n                    state_str[s.state],\n                ]\n            )\n            bar.value = s.progress * 100\n        else:\n            next_shift -= 1\n            ses.remove_torrent(download)\n            downloads.remove(download)\n            bar.close()\n            download_bars.remove(bar)\n            print(download.name(), "complete")\n    time.sleep(1)'}),(0,s.jsx)("p",{className:"body-text",children:"This will start downloading the files contained within the torrent file to your Google Drive account."}),(0,s.jsxs)("p",{className:"body-text",children:["All Done! Wolah, your torrent should start downloading by now. If you are facing any issues, you can always refer to the"," ",(0,s.jsx)("a",{href:"https://colab.research.google.com/github/FKLC/Torrent-To-Google-Drive-Downloader/blob/master/Torrent_To_Google_Drive_Downloader.ipynb",children:"full script here"})]}),(0,s.jsx)("h2",{className:"body-head mt-4",children:"Conclusion"}),(0,s.jsx)("p",{className:"body-text",children:"By following these steps, you can easily download torrent files directly to your Google Drive account using a Google Colab script. This can be a convenient way to download torrent without worring about your internet usage and free up space on your computer, while still being able to access your files from anywhere, without needing to use a third-party cloud torrent service."})]})}a.c.registerLanguage("dart",(function(e){const n=e.regex,o=/[\p{XID_Start}_]\p{XID_Continue}*/u,t=["and","as","assert","async","await","break","case","class","continue","def","del","elif","else","except","finally","for","from","global","if","import","in","is","lambda","match","nonlocal|10","not","or","pass","raise","return","try","while","with","yield"],a={$pattern:/[A-Za-z]\w+|__\w+__/,keyword:t,built_in:["__import__","abs","all","any","ascii","bin","bool","breakpoint","bytearray","bytes","callable","chr","classmethod","compile","complex","delattr","dict","dir","divmod","enumerate","eval","exec","filter","float","format","frozenset","getattr","globals","hasattr","hash","help","hex","id","input","int","isinstance","issubclass","iter","len","list","locals","map","max","memoryview","min","next","object","oct","open","ord","pow","print","property","range","repr","reversed","round","set","setattr","slice","sorted","staticmethod","str","sum","super","tuple","type","vars","zip"],literal:["__debug__","Ellipsis","False","None","NotImplemented","True"],type:["Any","Callable","Coroutine","Dict","List","Literal","Generic","Optional","Sequence","Set","Tuple","Type","Union"]},s={className:"meta",begin:/^(>>>|\.\.\.) /},r={className:"subst",begin:/\{/,end:/\}/,keywords:a,illegal:/#/},l={begin:/\{\{/,relevance:0},i={className:"string",contains:[e.BACKSLASH_ESCAPE],variants:[{begin:/([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,end:/'''/,contains:[e.BACKSLASH_ESCAPE,s],relevance:10},{begin:/([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?"""/,end:/"""/,contains:[e.BACKSLASH_ESCAPE,s],relevance:10},{begin:/([fF][rR]|[rR][fF]|[fF])'''/,end:/'''/,contains:[e.BACKSLASH_ESCAPE,s,l,r]},{begin:/([fF][rR]|[rR][fF]|[fF])"""/,end:/"""/,contains:[e.BACKSLASH_ESCAPE,s,l,r]},{begin:/([uU]|[rR])'/,end:/'/,relevance:10},{begin:/([uU]|[rR])"/,end:/"/,relevance:10},{begin:/([bB]|[bB][rR]|[rR][bB])'/,end:/'/},{begin:/([bB]|[bB][rR]|[rR][bB])"/,end:/"/},{begin:/([fF][rR]|[rR][fF]|[fF])'/,end:/'/,contains:[e.BACKSLASH_ESCAPE,l,r]},{begin:/([fF][rR]|[rR][fF]|[fF])"/,end:/"/,contains:[e.BACKSLASH_ESCAPE,l,r]},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]},c="[0-9](_?[0-9])*",d="(\\b(".concat(c,"))?\\.(").concat(c,")|\\b(").concat(c,")\\."),b="\\b|".concat(t.join("|")),h={className:"number",relevance:0,variants:[{begin:"(\\b(".concat(c,")|(").concat(d,"))[eE][+-]?(").concat(c,")[jJ]?(?=").concat(b,")")},{begin:"(".concat(d,")[jJ]?")},{begin:"\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?(?=".concat(b,")")},{begin:"\\b0[bB](_?[01])+[lL]?(?=".concat(b,")")},{begin:"\\b0[oO](_?[0-7])+[lL]?(?=".concat(b,")")},{begin:"\\b0[xX](_?[0-9a-fA-F])+[lL]?(?=".concat(b,")")},{begin:"\\b(".concat(c,")[jJ](?=").concat(b,")")}]},p={className:"comment",begin:n.lookahead(/# type:/),end:/$/,keywords:a,contains:[{begin:/# type:/},{begin:/#/,end:/\b\B/,endsWithParent:!0}]},u={className:"params",variants:[{className:"",begin:/\(\s*\)/,skip:!0},{begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:a,contains:["self",s,h,i,e.HASH_COMMENT_MODE]}]};return r.contains=[i,h,s],{name:"Python",aliases:["py","gyp","ipython"],unicodeRegex:!0,keywords:a,illegal:/(<\/|\?)|=>/,contains:[s,h,{begin:/\bself\b/},{beginKeywords:"if",relevance:0},i,p,e.HASH_COMMENT_MODE,{match:[/\bdef/,/\s+/,o],scope:{1:"keyword",3:"title.function"},contains:[u]},{variants:[{match:[/\bclass/,/\s+/,o,/\s*/,/\(\s*/,o,/\s*\)/]},{match:[/\bclass/,/\s+/,o]}],scope:{1:"keyword",3:"title.class",6:"title.class.inherited"}},{className:"meta",begin:/^[\t ]*@/,end:/(?=#)|$/,contains:[h,u,i]}]}}))}}]);
//# sourceMappingURL=20.c1788f0a.chunk.js.map